<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Run the latest snapshot of the SDK installer to set up a development environment in the workspace.</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>30</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.plugins.copyartifact.BuildSelectorParameter plugin="copyartifact@1.35">
          <name>INSTALLER_BUILD</name>
          <description>The installer build to test.</description>
          <defaultSelector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
        </hudson.plugins.copyartifact.BuildSelectorParameter>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.22">
      <autoRebuild>false</autoRebuild>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@1.8.4">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories>
        <string>Expensive</string>
      </categories>
      <throttleEnabled>true</throttleEnabled>
      <throttleOption>category</throttleOption>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.parameterizedtrigger.TriggerBuilder plugin="parameterized-trigger@2.26">
      <configs>
        <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.NodeParameters/>
          </configs>
          <projects>gfw-msys1-kill-processes</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <block>
            <buildStepFailureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </buildStepFailureThreshold>
            <unstableThreshold>
              <name>UNSTABLE</name>
              <ordinal>1</ordinal>
              <color>YELLOW</color>
              <completeBuild>true</completeBuild>
            </unstableThreshold>
            <failureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </failureThreshold>
          </block>
          <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
        </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.TriggerBuilder>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.35">
      <project>gfw-msys1-sdk-build-installer</project>
      <filter>ci/*, Git-SDK-*.exe</filter>
      <target></target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.ParameterizedBuildSelector">
        <parameterName>INSTALLER_BUILD</parameterName>
      </selector>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.BatchFile>
      <command>call ci\install-here.cmd</command>
    </hudson.tasks.BatchFile>
    <hudson.tasks.Shell>
      <command># Convert the log so that we can search it later in the Groovy post-build action.
iconv -f UCS-2LE -t UTF-8 mingw-get.log &gt; mingw-get.log.utf8
mv mingw-get.log.utf8 mingw-get.log

# This is much faster than using the Clone Workspace SCM Plugin and does not require to
# use the Multiple SCMs Plugin in downstream jobs that also need to clone from Git.
tar -czf Git-SDK.tar.gz Git-SDK/</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder plugin="groovy-postbuild@2.2">
      <script plugin="script-security@1.14">
        <script>def workspace = manager.build.workspace.getRemote()

if (manager.contains(new File(workspace + File.separator + &quot;mingw-get.log&quot;), &quot;^.*\\*\\*\\* ERROR \\*\\*\\*.*\$&quot;)) {
    def message = &quot;mingw-get reported an error!&quot;
    manager.createSummary(&quot;warning.gif&quot;).appendText(&quot;&lt;b&gt;&quot; + message + &quot;&lt;/b&gt;&quot;, false)
    manager.addErrorBadge(message)
    manager.buildUnstable()
}
</script>
        <sandbox>false</sandbox>
      </script>
      <behavior>2</behavior>
      <runForMatrixParent>false</runForMatrixParent>
    </org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>*.log, *.tar.gz</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.Mailer plugin="mailer@1.15">
      <recipients>sschuberth@gmail.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
    <hudson.tasks.BuildTrigger>
      <childProjects>gfw-msys1-build-git</childProjects>
      <threshold>
        <name>UNSTABLE</name>
        <ordinal>1</ordinal>
        <color>YELLOW</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </hudson.tasks.BuildTrigger>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.25">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.14.1">
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>45</timeoutMinutes>
      </strategy>
      <operationList/>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>